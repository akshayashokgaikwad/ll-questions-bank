{"version":3,"sources":["components/QuestionHeader.js","components/QuestionMain.js","redux/question/questionReducers.js","redux/store.js","components/QuestionFooter.js","redux/question/questionActions.js","components/QuestionLayout.js","components/Answers.js","components/Result.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionHeader","currentQuestionNumber","this","props","data","totalQuestions","className","React","Component","QuestionMain","handleChange","target","setAnswer","value","forceUpdate","question","answersGiven","optionChecked","undefined","q_number","answerGiven","image","src","alt","map","item","index","type","name","onChange","checked","questions","key","questionBanks","Object","hasOwnProperty","call","keys","length","q_keys","sort","a","b","q_numbers","assign","pop","initialState","qNumbers","totalCorrectAnswerGiven","percentage","questionReducers","state","action","correctAnswer","answer","parseInt","store","createStore","QuestionFooter","componentDidMount","unsubscribe","subscribe","currentState","getState","nextDisabled","prevDisabled","setState","toString","nextQuestionNumber","indexOf","prevQuestionNumber","lastQuestion","componentWillUnmount","previousQuestion","setQuestion","nextQuestion","showResult","history","push","onClick","disabled","QuestionLayout","connect","dispatch","Answers","Fragment","qNumber","aswered","option1","option2","option3","Result","totalCurrectAnswerGiven","q","element","totalAnswerGiven","isNaN","toFixed","search","queryString","parse","location","force","allQuestionsAnswered","tryAgain","answers","showAllAnswers","style","textAlign","Layout","exact","path","component","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a31ac36.chunk.js","sourcesContent":["import React from 'react';\n\nclass QuestionHeader extends React.Component {\n  render() {\n    const currentQuestionNumber = this.props.data.currentQuestionNumber;\n    const totalQuestions = this.props.data.totalQuestions;\n\n    return (\n      <div className=\"question bg-white p-3 border-bottom\">\n        <div className=\"d-flex flex-row justify-content-between align-items-center mcq\">\n          <h4>LL Question Banks</h4>\n          <span>\n            ({`${currentQuestionNumber} of ${totalQuestions}`})\n          </span>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default QuestionHeader;","import React from 'react';\n\nclass QuestionMain extends React.Component {\n  handleChange = ({ target }) => {\n    this.props.data.setAnswer(target.value);\n    this.forceUpdate();\n  }\n\n  render() {\n    const question = this.props.data.question;\n    const answersGiven = this.props.data.answersGiven;\n\n    const optionChecked = answersGiven[question.q_number] === undefined ? 0 : answersGiven[question.q_number].answerGiven;\n    return (\n      <div className=\"question bg-white p-3 border-bottom\">\n        <div className=\"d-flex flex-row align-items-center question-title\">\n          <h3 className=\"text-danger\">Q.</h3>\n          <h5 className=\"mt-1 ml-2\">\n            {question.question}\n          </h5>\n        </div>\n        {question.image !== null && (\n          <div className=\"d-flex flex-row align-items-center question-title\">\n            <img src={`images/${question.image}`} alt=\"LL Parking\" />\n          </div>\n        )}\n        {[1, 2, 3].map((item, index) => (\n          <div className=\"ans ml-2\" key={`answer-${question.q_number}-${index}`}>\n            <label className=\"radio\">\n              <input\n                type=\"radio\"\n                name={`answer${question.q_number}`}\n                value={item}\n                onChange={this.handleChange}\n                checked={item === optionChecked ? true : false}\n              />\n              <span>\n                {question[`option${item}`]}\n              </span>\n            </label>\n          </div>\n        ))}\n      </div>\n    );\n  };\n}\n\nexport default QuestionMain;","import questionBanks from '../../questions.json';\n\nlet questions = {};\nfor (const key in questionBanks) {\n  if (Object.hasOwnProperty.call(questionBanks, key)) {\n    const q_number = questionBanks[key].q_number;\n    questions[q_number] = questionBanks[key];\n  }\n}\n\nlet totalQuestions = Object.keys(questions).length;\nlet q_keys = Object.keys(questions);\nq_keys.sort((a, b) => a - b); // For ascending sort\nlet q_numbers = Object.assign([], q_keys);\ntotalQuestions = q_keys.pop();\n\n\nconst initialState = {\n  questions: questions,\n  currentQuestionNumber: 1,\n  question: {},\n  answersGiven: {},\n  totalQuestions: totalQuestions,\n  qNumbers: q_numbers,\n  totalCorrectAnswerGiven: 0,\n  percentage: 0,\n}\n\nconst questionReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_QUESTION': {\n      let currentQuestionNumber = action.currentQuestionNumber;\n      const question = questions[currentQuestionNumber];\n\n      return {\n        ...state,\n        currentQuestionNumber: currentQuestionNumber,\n        question: question\n      }\n    }\n\n    case 'SET_ANSWER': {\n      let answersGiven = state.answersGiven;\n      answersGiven[state.question.q_number] = {\n        correctAnswer: state.question.answer,\n        answerGiven: parseInt(action.answer),\n      }\n\n      let totalCorrectAnswerGiven = state.totalCorrectAnswerGiven;\n      if (parseInt(state.question.answer) === parseInt(action.answer)) {\n        totalCorrectAnswerGiven = totalCorrectAnswerGiven + 1;\n      }\n\n      return {\n        ...state,\n        answersGiven: answersGiven,\n        totalCorrectAnswerGiven: totalCorrectAnswerGiven,\n      }\n    }\n\n    default: return state;\n  }\n}\n\nexport default questionReducers;","import { createStore } from 'redux';\nimport questionReducers from './question/questionReducers';\n\n\nconst store = createStore(questionReducers);\n\nexport default store;","import React from 'react';\nimport store from '../redux/store';\n\nclass QuestionFooter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nextDisabled: true,\n      prevDisabled: true\n    };\n  }\n\n\n  componentDidMount = () => {\n    this.unsubscribe = store.subscribe(() => {\n      const currentState = store.getState();\n\n      let currentQuestionNumber = currentState.currentQuestionNumber;\n      const answersGiven = currentState.answersGiven;\n\n      const nextDisabled = !(currentQuestionNumber in answersGiven);\n      const prevDisabled = (currentQuestionNumber === 1);\n\n      this.setState({\n        nextDisabled: nextDisabled,\n        prevDisabled: prevDisabled\n      });\n\n      const qNumbers = currentState.qNumbers;\n      currentQuestionNumber = currentQuestionNumber.toString();\n      this.nextQuestionNumber = qNumbers[qNumbers.indexOf(currentQuestionNumber) + 1];\n      this.prevQuestionNumber = qNumbers[qNumbers.indexOf(currentQuestionNumber) - 1];\n\n      this.lastQuestion = currentQuestionNumber !== currentState.totalQuestions;\n    });\n  }\n\n  componentWillUnmount = () => this.unsubscribe();\n\n  previousQuestion = () => this.props.data.setQuestion(this.prevQuestionNumber);\n\n  nextQuestion = () => this.props.data.setQuestion(this.nextQuestionNumber);\n\n  showResult = () => this.props.data.history.push(\"/result\");\n\n  render() {\n    return (\n      <div className=\"d-flex flex-row justify-content-between align-items-center p-3 bg-white\">\n        <button\n          className=\"btn btn-primary d-flex align-items-center btn-danger\"\n          type=\"button\"\n          onClick={this.previousQuestion}\n          disabled={this.state.prevDisabled}\n        >\n          <i className=\"fa fa-angle-left mt-1 mr-1\"></i>\n          &nbsp;Previous\n        </button>\n\n        {this.lastQuestion ? (\n          <button\n            className=\"btn btn-primary border-success align-items-center btn-success\"\n            type=\"button\"\n            onClick={this.nextQuestion}\n            disabled={this.state.nextDisabled}\n          >\n            Next\n            <i className=\"fa fa-angle-right ml-2\"></i>\n          </button>\n        ) : (\n            <button\n              className=\"btn btn-primary border-success align-items-center btn-success\"\n              type=\"button\"\n              onClick={this.showResult}\n              disabled={this.state.nextDisabled}\n            >\n              Result\n              <i className=\"fa fa-angle-right ml-2\"></i>\n            </button>\n          )}\n\n      </div>\n    );\n  };\n}\n\nexport default QuestionFooter;","const SET_QUESTION = 'SET_QUESTION';\nconst SET_ANSWER = 'SET_ANSWER';\n\nexport const setQuestion = currentQuestionNumber => {\n  return {\n    type: SET_QUESTION,\n    currentQuestionNumber: currentQuestionNumber\n  }\n}\n\nexport const setAnswer = (answer) => {\n  return {\n    type: SET_ANSWER,\n    answer: answer\n  }\n}\n","import React from 'react';\nimport QuestionHeader from './QuestionHeader';\nimport QuestionMain from './QuestionMain';\nimport QuestionFooter from './QuestionFooter';\nimport { connect } from 'react-redux';\nimport { setQuestion, setAnswer } from '../redux';\n\nclass QuestionLayout extends React.Component {\n  componentDidMount = () => this.props.setQuestion(1);\n\n  render() {\n    return (\n      <>\n        <div className=\"container mt-5\">\n          <div className=\"d-flex justify-content-center row\">\n            <div className=\"col-md-10 col-lg-10\">\n              <div className=\"border\">\n                <QuestionHeader data={this.props} />\n                <QuestionMain data={this.props} />\n                <QuestionFooter data={this.props} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentQuestionNumber: state.currentQuestionNumber,\n    question: state.question,\n    answersGiven: state.answersGiven,\n    totalQuestions: state.totalQuestions,\n    qNumbers: state.qNumbers,\n    totalCorrectAnswerGiven: state.totalCorrectAnswerGiven,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setQuestion: currentQuestionNumber => dispatch(setQuestion(currentQuestionNumber)),\n    setAnswer: answer => dispatch(setAnswer(answer)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionLayout);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { setQuestion, setAnswer } from '../redux';\nimport '../css/answers.css';\n\nclass Answers extends React.Component {\n\n  render() {\n    const { questions, answersGiven } = this.props;\n\n    return (\n      <React.Fragment>\n        <h2>LL Question Bank Answers</h2>\n        {Object.keys(questions).map((qNumber, index) => {\n          const question = questions[qNumber];\n          const aswered = answersGiven[question.q_number] ? answersGiven[question.q_number]['answerGiven'] : false;\n\n          return (\n            <div className=\"question bg-white p-3 border-bottom\" key={index}>\n              <div className=\"d-flex flex-row align-items-center question-title\">\n                <h3 className=\"text-danger\">Q{qNumber}.</h3>\n                <h5 className=\"mt-1 ml-2\">\n                  {question.question}\n                </h5>\n              </div>\n              {question.image !== null && (\n                <div className=\"d-flex flex-row align-items-center question-title\">\n                  <img src={`images/${question.image}`} alt=\"LL Parking\" />\n                </div>\n              )}\n              <div className={`ans ml-2 ${question.answer === 1 && 'correctAnswer'} ${(aswered && aswered === 1) && 'yourCorrectAnswer'} ${(((aswered && aswered === 1)) && (aswered && aswered !== question.answer)) && 'yourIncorrectAnswer'}`}>\n                <label className=\"radio\">\n                  <span>\n                    {question.option1}\n                  </span>\n\n                  <span className=\"pull-right\">\n                    {(!(aswered && aswered === 1) && question.answer) === 1 && 'Correct answer'}\n                    {aswered && aswered === 1 && 'Your answer'}\n                  </span>\n                </label>\n              </div>\n\n              <div className={`ans ml-2 ${question.answer === 2 && 'correctAnswer'} ${(aswered && aswered === 2) && 'yourCorrectAnswer'} ${(((aswered && aswered === 2)) && (aswered && aswered !== question.answer)) && 'yourIncorrectAnswer'}`}>\n                <label className=\"radio\">\n                  <span>\n                    {question.option2}\n                  </span>\n\n                  <span className=\"pull-right\">\n                    {(!(aswered && aswered === 2) && question.answer) === 2 && 'Correct answer'}\n                    {aswered && aswered === 2 && 'Your answer'}\n                  </span>\n                </label>\n              </div>\n\n              <div className={`ans ml-2 ${question.answer === 3 && 'correctAnswer'} ${(aswered && aswered === 3) && 'yourCorrectAnswer'} ${(((aswered && aswered === 3)) && (aswered && aswered !== question.answer)) && 'yourIncorrectAnswer'}`}>\n                <label className=\"radio\">\n                  <span>\n                    {question.option3}\n                  </span>\n\n                  <span className=\"pull-right\">\n                    {(!(aswered && aswered === 3) && question.answer) === 3 && 'Correct answer'}\n                    {aswered && aswered === 3 && 'Your answer'}\n                  </span>\n                </label>\n              </div>\n\n              {false && [1, 2, 3].map((item, index) => {\n                const unAswered = !answersGiven[question.q_number];\n                const yourCorrectAnswer = (!unAswered && (item === question.answer === answersGiven[question.q_number]['answerGiven'])) ? true : false;\n                const yourIncorrectAnswer = (!unAswered && (question.answer !== answersGiven[question.q_number]['answerGiven'])) ? true : false;\n                const correctAnswer = question.answer === item;\n                const classes = `${correctAnswer ? 'correctAnswer' : ''} ${yourCorrectAnswer ? 'yourCorrectAnswer' : ''} ${yourIncorrectAnswer ? 'yourIncorrectAnswer' : ''} ${unAswered ? 'unAswered' : ''}`;\n\n                return (\n                  <div className={`ans ml-2 ${classes}`} key={`answer-${question.q_number}-${index}`}>\n                    <label className=\"radio\">\n                      <span>\n                        {question[`option${item}`]}\n                      </span>\n\n                      <span className=\"pull-right\">\n                        {correctAnswer && 'Correct answer'}\n                      </span>\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    currentQuestionNumber: state.currentQuestionNumber,\n    question: state.question,\n    answersGiven: state.answersGiven,\n    totalQuestions: state.totalQuestions,\n    qNumbers: state.qNumbers,\n    totalCorrectAnswerGiven: state.totalCorrectAnswerGiven,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setQuestion: currentQuestionNumber => dispatch(setQuestion(currentQuestionNumber)),\n    setAnswer: answer => dispatch(setAnswer(answer)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Answers);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport Answers from \"./Answers\";\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalAnswerGiven: 0,\n      totalCurrectAnswerGiven: 0,\n      percentage: 0,\n      showAllAnswers: false,\n    }\n  }\n\n  componentDidMount = () => {\n    const answersGiven = this.props.answersGiven;\n    let totalCurrectAnswerGiven = 0;\n    for (const q in answersGiven) {\n      if (Object.hasOwnProperty.call(answersGiven, q)) {\n        const element = answersGiven[q];\n        if (element.correctAnswer === element.answerGiven) {\n          totalCurrectAnswerGiven = totalCurrectAnswerGiven + 1;\n        }\n      }\n    }\n\n    const totalAnswerGiven = Object.keys(answersGiven).length;\n    let percentage = (parseInt(totalCurrectAnswerGiven) / parseInt(totalAnswerGiven)) * 100;\n    percentage = isNaN(percentage) ? 0 : percentage.toFixed(2);\n\n    this.setState({\n      totalAnswerGiven: totalAnswerGiven,\n      totalCurrectAnswerGiven: totalCurrectAnswerGiven,\n      percentage: percentage\n    });\n\n    // answer all questions\n    // pass ?force in query\n    let search = queryString.parse(this.props.location.search);\n    this.force = typeof search.force !== 'undefined';\n    this.allQuestionsAnswered = parseInt(this.props.totalQuestions) === parseInt(this.state.totalAnswerGiven);\n    this.showResult = this.force || this.allQuestionsAnswered;\n\n    // @todo\n    this.showResult = true;\n  }\n\n  tryAgain = () => {\n    // first clear answers given from store, then redirect\n    this.props.history.push(\"/\");\n  };\n\n  answers = () => {\n    this.setState({ showAllAnswers: true });\n  };\n\n  render() {\n    if (!this.showResult) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <p>\n            <b>\n              Please answer all questions to see the final results!\n            </b>\n          </p>\n          <button\n            className=\"btn btn-primary border-success align-items-center btn-success\"\n            type=\"button\"\n            onClick={this.tryAgain}\n          >\n            Try Again\n              </button>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div>\n          <div>\n            <div style={{ textAlign: 'center' }}>\n              <h1>Result:</h1>\n              {this.state.totalCurrectAnswerGiven} of {this.state.totalAnswerGiven}\n              <p>\n                <b>{`${this.state.percentage}%`}</b>\n              </p>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <button\n                className=\"btn btn-primary border-success align-items-center btn-success\"\n                type=\"button\"\n                onClick={this.answers}\n              >\n                Check your answer\n              </button>\n              &nbsp;&nbsp;\n              <button\n                className=\"btn btn-primary border-success align-items-center btn-success\"\n                type=\"button\"\n                onClick={this.tryAgain}\n              >\n                Try Again\n              </button>\n            </div>\n          </div>\n        </div>\n        <hr />\n        {this.state.showAllAnswers && <Answers />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    answersGiven: state.answersGiven,\n    totalQuestions: state.totalQuestions\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Result);","import React from 'react';\nimport QuestionLayout from './QuestionLayout';\nimport Result from './Result';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nclass Layout extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Switch>\n          <Route exact path=\"/\" component={QuestionLayout} />\n          <Route exact path=\"/ll-questions-bank\">\n            <Redirect to=\"/\" />\n          </Route>\n          <Route exact path=\"/question\" component={QuestionLayout} />\n          <Route exact path=\"/result\" component={Result} />\n          <Route path=\"*\" component={() => '404 NOT FOUND'} />\n        </Switch>\n      </Provider>\n    );\n  };\n}\n\nexport default Layout;","import Layout from './components/Layout';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}